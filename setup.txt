Remove App.controller
Remove App.service
Create a new folder called App
Move swagger away from folder
Move Database MOdule into app.MOdule ( how does this affect ORM Config, maybe move it into Database module)
Update ZOd validation code
Use Create ZOD DTO
Create Custom Decorator to get users
Setup decorators folders, with decorator like `set-is-public` , get-user, set-roles to be an actual guard 
Implement hasMinimum role guard.
Implement Global Logger interceptor, such that i don't need a try catch in all routes
Implement IUSer such that I don't need to depend on Entity abstraction
Setup proper test containers using a  test set up to start the test containers.
Setup integration tests close to the controller folder
Set up Normative folder structure. -> controller -> domain ( service , repository )
Add customized pipes to app module.



Structure should be:
controllers -( auth , users )
domains ( auth, users )

Implement a docker file to start up mysql server locally
Change env naming to be more generic instead of MYSQL_HOST , better DB_HOST or instead, Database URI.
Attempt to set up vite test as test runner instead of jest

Set up database migrations with Typeorm


//////// WRITE READ ME FILE
Show test coverage in readme.
discuss prequisite technology needed to run this service. What needs to be installed and running locally.
Document readme to show how to start the service, run migrations, seed the database step by step.
Add documentation to show a link to the swagger documentation when service is up and running.
Document the endpoints in a tabular format  for a quick glance.
Write down some coding principles used in the course of this implementation.
Add Author Name.
Title the Readme documentation.
Make it abit fancy with emojis.